generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  role          String   @default("user")

  accounts      Account[]
  sessions      Session[]
  datasets      Dataset[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Dataset {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name             String
  originalFilename String?
  rowCount         Int?
  columns          Json?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  insights Insight[]
  charts   Chart[]
  reports  Report[]
}

model Insight {
  id        String   @id @default(cuid())
  datasetId String
  dataset   Dataset  @relation(fields: [datasetId], references: [id], onDelete: Cascade)
  title     String
  content   String
  score     Float?
  createdAt DateTime @default(now())
}

model Chart {
  id        String   @id @default(cuid())
  datasetId String
  dataset   Dataset  @relation(fields: [datasetId], references: [id], onDelete: Cascade)
  type      String
  spec      Json
  imageUrl  String?
  createdAt DateTime @default(now())
}

model Report {
  id        String   @id @default(cuid())
  datasetId String
  dataset   Dataset  @relation(fields: [datasetId], references: [id], onDelete: Cascade)
  html      String?
  markdown  String?
  createdAt DateTime @default(now())
}
